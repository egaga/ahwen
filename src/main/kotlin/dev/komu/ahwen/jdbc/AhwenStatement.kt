package dev.komu.ahwen.jdbc

import dev.komu.ahwen.query.Constant
import dev.komu.ahwen.tx.Transaction
import java.sql.Connection
import java.sql.ResultSet
import java.sql.SQLWarning
import java.sql.Statement

class AhwenStatement(private val db: AhwenDatabase) : Statement {

    override fun executeUpdate(sql: String): Int = withTransaction { tx ->
        db.planner.executeUpdate(sql, tx)
    }

    override fun executeQuery(sql: String): ResultSet = withTransaction { tx ->
        val plan = db.planner.createQueryPlan(sql, tx)
        val scan = plan.open()
        val rows = mutableListOf<Map<String, Constant>>()
        while (scan.next()) {
            rows += plan.schema.fields.map { it to scan.getVal(it) }.toMap()
        }
        scan.close()
        return AhwenResultSet(rows)
    }

    private inline fun <T> withTransaction(callback: (Transaction) -> T): T {
        val tx = db.beginTransaction()
        try {
            val result = callback(tx)
            tx.commit()
            return result
        } catch (e: Throwable) {
            tx.rollback()
            throw e
        }
    }

    override fun close() {
    }

    override fun getResultSetType(): Int {
        error("unsupported operation")
    }

    override fun cancel() {
        error("unsupported operation")
    }

    override fun getConnection(): Connection {
        error("unsupported operation")
    }

    override fun setMaxFieldSize(max: Int) {
        error("unsupported operation")
    }

    override fun getWarnings(): SQLWarning {
        error("unsupported operation")
    }

    override fun isClosed(): Boolean {
        error("unsupported operation")
    }

    override fun getMaxFieldSize(): Int {
        error("unsupported operation")
    }

    override fun getUpdateCount(): Int {
        error("unsupported operation")
    }

    override fun setFetchDirection(direction: Int) {
        error("unsupported operation")
    }

    override fun getFetchSize(): Int {
        error("unsupported operation")
    }

    override fun executeBatch(): IntArray {
        error("unsupported operation")
    }

    override fun getQueryTimeout(): Int {
        error("unsupported operation")
    }

    override fun isPoolable(): Boolean {
        error("unsupported operation")
    }

    override fun getGeneratedKeys(): ResultSet {
        error("unsupported operation")
    }

    override fun getResultSetConcurrency(): Int {
        error("unsupported operation")
    }

    override fun getResultSet(): ResultSet {
        error("unsupported operation")
    }

    override fun closeOnCompletion() {
        error("unsupported operation")
    }

    override fun executeUpdate(sql: String?, autoGeneratedKeys: Int): Int {
        error("unsupported operation")
    }

    override fun executeUpdate(sql: String?, columnIndexes: IntArray?): Int {
        error("unsupported operation")
    }

    override fun executeUpdate(sql: String?, columnNames: Array<out String>?): Int {
        error("unsupported operation")
    }

    override fun clearBatch() {
        error("unsupported operation")
    }

    override fun isCloseOnCompletion(): Boolean {
        error("unsupported operation")
    }

    override fun <T : Any?> unwrap(iface: Class<T>?): T {
        error("unsupported operation")
    }

    override fun getMaxRows(): Int {
        error("unsupported operation")
    }

    override fun isWrapperFor(iface: Class<*>?): Boolean {
        error("unsupported operation")
    }

    override fun setMaxRows(max: Int) {
        error("unsupported operation")
    }

    override fun setEscapeProcessing(enable: Boolean) {
        error("unsupported operation")
    }

    override fun setCursorName(name: String?) {
        error("unsupported operation")
    }

    override fun execute(sql: String?): Boolean {
        error("unsupported operation")
    }

    override fun execute(sql: String?, autoGeneratedKeys: Int): Boolean {
        error("unsupported operation")
    }

    override fun execute(sql: String?, columnIndexes: IntArray?): Boolean {
        error("unsupported operation")
    }

    override fun execute(sql: String?, columnNames: Array<out String>?): Boolean {
        error("unsupported operation")
    }

    override fun setPoolable(poolable: Boolean) {
        error("unsupported operation")
    }

    override fun setFetchSize(rows: Int) {
        error("unsupported operation")
    }

    override fun clearWarnings() {
        error("unsupported operation")
    }

    override fun addBatch(sql: String?) {
        error("unsupported operation")
    }

    override fun setQueryTimeout(seconds: Int) {
        error("unsupported operation")
    }

    override fun getFetchDirection(): Int {
        error("unsupported operation")
    }

    override fun getResultSetHoldability(): Int {
        error("unsupported operation")
    }

    override fun getMoreResults(): Boolean {
        error("unsupported operation")
    }

    override fun getMoreResults(current: Int): Boolean {
        error("unsupported operation")
    }
}
